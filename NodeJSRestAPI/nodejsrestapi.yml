apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nodejsrestapi
  labels:
    app: nodejsrestapi
spec:
  serviceName: svc-nodejsrestapi
  podManagementPolicy: Parallel # Default is OrderedReady
  replicas: 2 # Default is 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: nodejsrestapi # Has to match .spec.template.metadata.labels
  template:
    metadata:
      labels:
        app: nodejsrestapi # Has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      #      affinity:
      #        podAntiAffinity:
      #          requiredDuringSchedulingIgnoredDuringExecution:
      #          - labelSelector:
      #              matchExpressions:
      #              - key: app
      #                operator: In
      #                values:
      #                - nodejsrestapi
      #            topologyKey: "kubernetes.io/hostname"
      containers:
        - name: nodejsrestapi
          image: khteh/node.jsrestapi:latest
          imagePullPolicy: Always
          env:
            - name: POSTGRESQL_HOST
              value: "svc-postgresql"
            - name: POSTGRESQL_PORT
              value: "5432"
            - name: POSTGRESQL_DB
              value: "school"
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  name: postgresql-secret
                  key: postgresql-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql-secret
                  key: postgresql-password
            #- name: ELASTIC_APM_SECRET_TOKEN
            #  valueFrom:
            #    secretKeyRef:
            #      name: apm-public-cert-token
            #      key: token
            - name: GEMINI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: google-gemini
                  key: GEMINI_API_KEY
          ports:
            - containerPort: 443
              name: https
              protocol: TCP
          startupProbe: # failureThreshold * periodSeconds long enough to cover the worst case startup time
            httpGet:
              path: /health/ready
              port: https
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 10
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /health/ready
              port: https
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 10
            failureThreshold: 3
            successThreshold: 1
          livenessProbe:
            httpGet:
              path: /health/live
              port: https
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 10
            failureThreshold: 3
            successThreshold: 1
          volumeMounts:
            #- name: apm-public-cert-token
            #  mountPath: /etc/ca-certificates/tls.crt
            #  subPath: tls.crt
            #  readOnly: true
            - name: nodejs-fluentd-config
              mountPath: /etc/td-agent
            - name: nodejsrestapi-config
              mountPath: config/default.json
              subPath: default.json
              readOnly: true
          #        - name: log
          #          mountPath: /var/log/aspnetcore
          resources:
            limits:
              cpu: 500m
              memory: 2Gi
        - name: fluentd
          image: khteh/fluentd:latest
          volumeMounts:
            - name: log
              mountPath: /var/log/nodejsrestapi
            - name: nodejsrestapi-config
              mountPath: /etc/td-agent
            - name: access-log-template
              mountPath: /tmp/access_log_template.json
              subPath: access_log_template.json
              readOnly: true
            #- mountPath: /fluentd/elastic/tls.crt
            #  name: elasticsearch-ca
            #  subPath: tls.crt
            #  readOnly: true
          resources:
            limits:
              cpu: 500m
              memory: 2Gi
      volumes:
        - name: nodejsrestapi-config
          configMap:
            name: nodejsrestapi
        - name: nodejs-fluentd-config
          configMap:
            name: nodejs-fluentd-config
        - name: access-log-template
          configMap:
            name: access-log-template
        - name: log
          emptyDir: {}
        #- name: elasticsearch-ca
        #  secret:
        #    defaultMode: 420
        #    optional: false
        #    secretName: elasticsearch-eck-ca # This is the secret that holds the Elasticsearch CA cert
        #- name: apm-public-cert-token
        #  secret:
        #    defaultMode: 420
        #    optional: false
        #    secretName: apm-public-cert-token # This is the secret that holds the Elasticsearch CA cert
        #    items:
        #      - key: tls.crt
        #        path: tls.crt
