apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  labels:
    app: db-mysql
    component: mysql
spec:
  serviceName: svc-mysql
  podManagementPolicy: Parallel # Default is OrderedReady
  replicas: 1 # Default is 1
  selector:
    matchLabels:
      app: db-mysql # Has to match .spec.template.metadata.labels
      component: mysql
  template:
    metadata:
      labels:
        app: db-mysql # Has to match .spec.selector.matchLabels
        component: mysql
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: mysql
#        image: mysql:latest
        image: khteh/mysql:latest
        imagePullPolicy: Always
#        command: ["mysqld"]
#        args: ["--lower_case_table_names=1", "--skip-ssl", "--ignore-db-dir=lost+found"]
        env:
#         - name: MYSQL_ALLOW_EMPTY_PASSWORD
#           value: "1"
         - name: MYSQL_ROOT_HOST
           valueFrom:
             secretKeyRef:
               name: mysql-secret
               key: mysql-root-host
         - name: MYSQL_ROOT_PASSWORD
           valueFrom:
             secretKeyRef:
               name: mysql-secret
               key: mysql-root-password
         - name: MYSQL_USER
           valueFrom:
             secretKeyRef:
               name: mysql-secret
               key: mysql-user
         - name: MYSQL_PASSWORD
           valueFrom:
             secretKeyRef:
               name: mysql-secret
               key: mysql-password
         - name: MYSQL_DATABASE
           value: AspNetCoreApiStarter
         - name: MYSQL_DATABASE_1
           value: library
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
          subPath: mysql
        - name: mysql-initdb
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: mysql-initdb
        configMap:
          name: mysql-initdb
  volumeClaimTemplates:
  - metadata:
      name: mysql-persistent-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
#      storageClassName: local-storage
      resources:
        requests:
          storage: 10Gi
