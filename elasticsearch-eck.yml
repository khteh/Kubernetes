apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: kyberlife
spec:
  version: 8.9.0
  auth:
    fileRealm:
      - secretName: elasticsearch-secret
  nodeSets:
    - name: master
      count: 3
      config:
        # most Elasticsearch configuration parameters are possible to set, e.g: node.attr.attr_name: attr_value
        #node.roles: ["master", "data", "ingest", "ml"]
        node.roles: ["master"]
        script.painless.regex.enabled: true
        http.cors.enabled: true
        http.cors.allow-origin: "*"
        #network.host: _site_ Forbidden: Configuration setting is reserved for internal use
        #node.name: ${HOSTNAME} Forbidden: Configuration setting is reserved for internal use
        bootstrap.memory_lock: true
        #xpack.security.transport.ssl.enabled: true Forbidden: Configuration setting is reserved for internal use
        cluster.max_shards_per_node: 10000
      podTemplate:
        spec:
          initContainers:
            - name: install-plugins
              command:
                - sh
                - -c
                - |
                  bin/elasticsearch-plugin install --batch repository-s3
            - name: add-aws-keys
              env:
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: elastic-eck-snapshots
                      key: access-key-id
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: elastic-eck-snapshots
                      key: access-secret-key
              command:
                - sh
                - -c
                - |
                  echo $AWS_ACCESS_KEY_ID | bin/elasticsearch-keystore add --stdin --force s3.client.default.access_key
                  echo $AWS_SECRET_ACCESS_KEY | bin/elasticsearch-keystore add --stdin --force s3.client.default.secret_key
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: elasticsearch.k8s.elastic.co/statefulset-name
                      operator: In
                      values:
                        - kyberlife-es-master
                topologyKey: kubernetes.io/hostname
          containers:
            - name: elasticsearch
              readinessProbe:
                exec:
                  command:
                    - bash
                    - -c
                    - /mnt/elastic-internal/scripts/readiness-probe-script.sh
                failureThreshold: 3
                initialDelaySeconds: 10
                periodSeconds: 12
                successThreshold: 1
                timeoutSeconds: 12
              env:
                - name: READINESS_PROBE_TIMEOUT
                  value: "10"
      volumeClaimTemplates:
        - metadata:
            name: elasticsearch-data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 10Gi
            storageClassName: gp3
    - name: data
      count: 5
      config:
        # most Elasticsearch configuration parameters are possible to set, e.g: node.attr.attr_name: attr_value
        #node.roles: ["master", "data", "ingest", "ml"]
        node.roles: ["data", "ingest"]
        script.painless.regex.enabled: true
        http.cors.enabled: true
        http.cors.allow-origin: "*"
        #network.host: _site_ Forbidden: Configuration setting is reserved for internal use
        #node.name: ${HOSTNAME} Forbidden: Configuration setting is reserved for internal use
        bootstrap.memory_lock: true
        #xpack.security.transport.ssl.enabled: true Forbidden: Configuration setting is reserved for internal use
        cluster.max_shards_per_node: 10000
      podTemplate:
        spec:
          initContainers:
            - name: install-plugins
              command:
                - sh
                - -c
                - |
                  bin/elasticsearch-plugin install --batch repository-s3
            - name: add-aws-keys
              env:
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: elastic-eck-snapshots
                      key: access-key-id
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: elastic-eck-snapshots
                      key: access-secret-key
              command:
                - sh
                - -c
                - |
                  echo $AWS_ACCESS_KEY_ID | bin/elasticsearch-keystore add --stdin --force s3.client.default.access_key
                  echo $AWS_SECRET_ACCESS_KEY | bin/elasticsearch-keystore add --stdin --force s3.client.default.secret_key
          containers:
            - name: elasticsearch
              readinessProbe:
                exec:
                  command:
                    - bash
                    - -c
                    - /mnt/elastic-internal/scripts/readiness-probe-script.sh
                failureThreshold: 3
                initialDelaySeconds: 10
                periodSeconds: 12
                successThreshold: 1
                timeoutSeconds: 12
              env:
                - name: READINESS_PROBE_TIMEOUT
                  value: "10"
      volumeClaimTemplates:
        - metadata:
            name: elasticsearch-data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 20Gi
            storageClassName: gp3
