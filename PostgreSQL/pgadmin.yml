apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pgadmin
  labels:
    app: pgadmin
    component: sql-db
spec:
  serviceName: svc-pgadmin
  podManagementPolicy: Parallel
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: pgadmin
      component: sql-db
  template:
    metadata:
      labels:
        app: pgadmin
        component: sql-db
    spec:
      terminationGracePeriodSeconds: 10
      #      affinity:
      #        podAntiAffinity:
      #          requiredDuringSchedulingIgnoredDuringExecution:
      #          - labelSelector:
      #              matchExpressions:
      #              - key: app
      #                operator: In
      #                values:
      #                - pgadmin
      #            topologyKey: "kubernetes.io/hostname"
      imagePullSecrets:
        - name: imagepullsecret
      containers:
        - name: pgadmin
          image: dpage/pgadmin4:latest
          imagePullPolicy: Always
          env:
            - name: PGADMIN_DEFAULT_EMAIL
              valueFrom:
                secretKeyRef:
                  name: pgadmin-secret
                  key: pgadmin-email
            - name: PGADMIN_DEFAULT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pgadmin-secret
                  key: pgadmin-password
            - name: PGADMIN_ENABLE_TLS
              value: "true"
            - name: PGADMIN_CONFIG_SECURITY_EMAIL_VALIDATOR_ARGS
              value: '{"check_deliverability": False}'
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          volumeMounts:
            - name: pgadmin-data
              mountPath: /var/lib/pgadmin
            - name: pgadmin-secret
              mountPath: /pgadmin4/servers.json
              subPath: servers.json
              readOnly: true
            - name: server-key
              mountPath: /certs/server.key
              subPath: server.key
              readOnly: true
            - name: server-cert
              mountPath: /certs/server.cert
              subPath: server.cert
              readOnly: true
      volumes:
        - name: pgadmin-data
          persistentVolumeClaim:
            claimName: pvc-pgadmin
        - name: pgadmin-secret
          secret:
            secretName: pgadmin-secret
            items:
              - key: servers.json
                path: servers.json
        - name: server-cert
          secret:
            secretName: server-cert
            items:
              - key: server.cert
                path: server.cert
        - name: server-key
          secret:
            secretName: server-key
            items:
              - key: server.key
                path: server.key
