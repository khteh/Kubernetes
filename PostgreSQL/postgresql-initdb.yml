apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-initdb
  namespace: default
data:
  AspNetCoreWebApi.sql: |+
    --
    -- PostgreSQL database dump
    --

    -- Dumped from database version 14.5 (Debian 14.5-1.pgdg110+1)
    -- Dumped by pg_dump version 15.3 (Ubuntu 15.3-0ubuntu0.23.04.1)

    SET statement_timeout = 0;
    SET lock_timeout = 0;
    SET idle_in_transaction_session_timeout = 0;
    SET client_encoding = 'UTF8';
    SET standard_conforming_strings = on;
    SELECT pg_catalog.set_config('search_path', '', false);
    SET check_function_bodies = false;
    SET xmloption = content;
    SET client_min_messages = warning;
    SET row_security = off;

    --
    -- Name: public; Type: SCHEMA; Schema: -; Owner: postgres
    --

    -- *not* creating schema, since initdb creates it


    ALTER SCHEMA public OWNER TO postgres;

    SET default_tablespace = '';

    SET default_table_access_method = heap;

    --
    -- Name: AspNetRoleClaims; Type: TABLE; Schema: public; Owner: guest
    --

    CREATE TABLE public."AspNetRoleClaims" (
        "Id" integer NOT NULL,
        "RoleId" text NOT NULL,
        "ClaimType" text,
        "ClaimValue" text
    );


    ALTER TABLE public."AspNetRoleClaims" OWNER TO guest;

    --
    -- Name: AspNetRoleClaims_Id_seq; Type: SEQUENCE; Schema: public; Owner: guest
    --

    ALTER TABLE public."AspNetRoleClaims" ALTER COLUMN "Id" ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public."AspNetRoleClaims_Id_seq"
        START WITH 1
        INCREMENT BY 1
        NO MINVALUE
        NO MAXVALUE
        CACHE 1
    );


    --
    -- Name: AspNetRoles; Type: TABLE; Schema: public; Owner: guest
    --

    CREATE TABLE public."AspNetRoles" (
        "Id" text NOT NULL,
        "Name" character varying(256),
        "NormalizedName" character varying(256),
        "ConcurrencyStamp" text
    );


    ALTER TABLE public."AspNetRoles" OWNER TO guest;

    --
    -- Name: AspNetUserClaims; Type: TABLE; Schema: public; Owner: guest
    --

    CREATE TABLE public."AspNetUserClaims" (
        "Id" integer NOT NULL,
        "UserId" text NOT NULL,
        "ClaimType" text,
        "ClaimValue" text
    );


    ALTER TABLE public."AspNetUserClaims" OWNER TO guest;

    --
    -- Name: AspNetUserClaims_Id_seq; Type: SEQUENCE; Schema: public; Owner: guest
    --

    ALTER TABLE public."AspNetUserClaims" ALTER COLUMN "Id" ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public."AspNetUserClaims_Id_seq"
        START WITH 1
        INCREMENT BY 1
        NO MINVALUE
        NO MAXVALUE
        CACHE 1
    );


    --
    -- Name: AspNetUserLogins; Type: TABLE; Schema: public; Owner: guest
    --

    CREATE TABLE public."AspNetUserLogins" (
        "LoginProvider" text NOT NULL,
        "ProviderKey" text NOT NULL,
        "ProviderDisplayName" text,
        "UserId" text NOT NULL
    );


    ALTER TABLE public."AspNetUserLogins" OWNER TO guest;

    --
    -- Name: AspNetUserRoles; Type: TABLE; Schema: public; Owner: guest
    --

    CREATE TABLE public."AspNetUserRoles" (
        "UserId" text NOT NULL,
        "RoleId" text NOT NULL
    );


    ALTER TABLE public."AspNetUserRoles" OWNER TO guest;

    --
    -- Name: AspNetUserTokens; Type: TABLE; Schema: public; Owner: guest
    --

    CREATE TABLE public."AspNetUserTokens" (
        "UserId" text NOT NULL,
        "LoginProvider" text NOT NULL,
        "Name" text NOT NULL,
        "Value" text
    );


    ALTER TABLE public."AspNetUserTokens" OWNER TO guest;

    --
    -- Name: AspNetUsers; Type: TABLE; Schema: public; Owner: guest
    --

    CREATE TABLE public."AspNetUsers" (
        "Id" text NOT NULL,
        "FirstName" text,
        "LastName" text,
        "UserName" character varying(256),
        "NormalizedUserName" character varying(256),
        "Email" character varying(256),
        "NormalizedEmail" character varying(256),
        "EmailConfirmed" boolean NOT NULL,
        "PasswordHash" text,
        "SecurityStamp" text,
        "ConcurrencyStamp" text,
        "PhoneNumber" text,
        "PhoneNumberConfirmed" boolean NOT NULL,
        "TwoFactorEnabled" boolean NOT NULL,
        "LockoutEnd" timestamp with time zone,
        "LockoutEnabled" boolean NOT NULL,
        "AccessFailedCount" integer NOT NULL
    );


    ALTER TABLE public."AspNetUsers" OWNER TO guest;

    --
    -- Name: RefreshTokens; Type: TABLE; Schema: public; Owner: guest
    --

    CREATE TABLE public."RefreshTokens" (
        "Id" integer NOT NULL,
        "Token" text,
        "Expires" timestamp with time zone NOT NULL,
        "UserId" integer NOT NULL,
        "RemoteIpAddress" text,
        "Created" timestamp with time zone NOT NULL,
        "Modified" timestamp with time zone NOT NULL
    );


    ALTER TABLE public."RefreshTokens" OWNER TO guest;

    --
    -- Name: RefreshTokens_Id_seq; Type: SEQUENCE; Schema: public; Owner: guest
    --

    ALTER TABLE public."RefreshTokens" ALTER COLUMN "Id" ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public."RefreshTokens_Id_seq"
        START WITH 1
        INCREMENT BY 1
        NO MINVALUE
        NO MAXVALUE
        CACHE 1
    );


    --
    -- Name: Users; Type: TABLE; Schema: public; Owner: guest
    --

    CREATE TABLE public."Users" (
        "Id" integer NOT NULL,
        "IdentityId" text,
        "Address_Street" text,
        "Address_City" text,
        "Address_State" text,
        "Address_Country" text,
        "Address_ZipCode" text,
        "Created" timestamp with time zone NOT NULL,
        "Modified" timestamp with time zone NOT NULL
    );


    ALTER TABLE public."Users" OWNER TO guest;

    --
    -- Name: Users_Id_seq; Type: SEQUENCE; Schema: public; Owner: guest
    --

    ALTER TABLE public."Users" ALTER COLUMN "Id" ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public."Users_Id_seq"
        START WITH 1
        INCREMENT BY 1
        NO MINVALUE
        NO MAXVALUE
        CACHE 1
    );


    --
    -- Name: __EFMigrationsHistory; Type: TABLE; Schema: public; Owner: guest
    --

    CREATE TABLE public."__EFMigrationsHistory" (
        "MigrationId" character varying(150) NOT NULL,
        "ProductVersion" character varying(32) NOT NULL
    );


    ALTER TABLE public."__EFMigrationsHistory" OWNER TO guest;

    --
    -- Data for Name: AspNetRoleClaims; Type: TABLE DATA; Schema: public; Owner: guest
    --

    COPY public."AspNetRoleClaims" ("Id", "RoleId", "ClaimType", "ClaimValue") FROM stdin;
    \.


    --
    -- Data for Name: AspNetRoles; Type: TABLE DATA; Schema: public; Owner: guest
    --

    COPY public."AspNetRoles" ("Id", "Name", "NormalizedName", "ConcurrencyStamp") FROM stdin;
    \.


    --
    -- Data for Name: AspNetUserClaims; Type: TABLE DATA; Schema: public; Owner: guest
    --

    COPY public."AspNetUserClaims" ("Id", "UserId", "ClaimType", "ClaimValue") FROM stdin;
    1	8872d9d7-1b0c-4bf1-904b-473dbb122c0f	http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name	khteh
    2	44665118-ee61-4797-87b9-228f7f783250	http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name	mickey
    \.


    --
    -- Data for Name: AspNetUserLogins; Type: TABLE DATA; Schema: public; Owner: guest
    --

    COPY public."AspNetUserLogins" ("LoginProvider", "ProviderKey", "ProviderDisplayName", "UserId") FROM stdin;
    \.


    --
    -- Data for Name: AspNetUserRoles; Type: TABLE DATA; Schema: public; Owner: guest
    --

    COPY public."AspNetUserRoles" ("UserId", "RoleId") FROM stdin;
    \.


    --
    -- Data for Name: AspNetUserTokens; Type: TABLE DATA; Schema: public; Owner: guest
    --

    COPY public."AspNetUserTokens" ("UserId", "LoginProvider", "Name", "Value") FROM stdin;
    \.


    --
    -- Data for Name: AspNetUsers; Type: TABLE DATA; Schema: public; Owner: guest
    --

    COPY public."AspNetUsers" ("Id", "FirstName", "LastName", "UserName", "NormalizedUserName", "Email", "NormalizedEmail", "EmailConfirmed", "PasswordHash", "SecurityStamp", "ConcurrencyStamp", "PhoneNumber", "PhoneNumberConfirmed", "TwoFactorEnabled", "LockoutEnd", "LockoutEnabled", "AccessFailedCount") FROM stdin;
    8872d9d7-1b0c-4bf1-904b-473dbb122c0f	Kok How	Teh	khteh	KHTEH	khteh@email.com	KHTEH@EMAIL.COM	f	AQAAAAIAAYagAAAAEOrOL4qBAiNz/1+jRLDGDaTuKmR8BLmCTh3CE8HB4WPnG3szHka1162+gNnhyCg1Dg==	JND2C6QYQARYCYLTSZVUFEH5GGZ6DIKY	88285082-ae9e-469a-a105-e7f838b45454	\N	f	f	\N	t	0
    44665118-ee61-4797-87b9-228f7f783250	Mickey	Mouse	mickey	MICKEY	mickey@email.com	MICKEY@EMAIL.COM	f	AQAAAAIAAYagAAAAEHMAkj9J0YykpDyj135EfAu5I6MK1xHfWh+cRdfHVGS+V6RgG1lyr0XTogTNRRtLuw==	MAMLZLV3GCU5TFWRXOI7EYGHA4GXCXHV	6baa75a0-5c39-47cf-ad53-7b4551cbdbcb	\N	f	f	\N	t	0
    \.


    --
    -- Data for Name: RefreshTokens; Type: TABLE DATA; Schema: public; Owner: guest
    --

    COPY public."RefreshTokens" ("Id", "Token", "Expires", "UserId", "RemoteIpAddress", "Created", "Modified") FROM stdin;
    1	b6k2raCCSlFkbWIg9rx2L0qDACPbEHKwn45PcTdb8bE=	2023-03-11 10:38:23.960068+00	1	::1	2023-03-06 10:38:23.976597+00	2023-03-06 10:38:23.976597+00
    2	eIWN74FHDuHIzsOjK0kSDbeSSpxZEDWmFpYYHVG30Zo=	2023-03-11 10:38:39.981989+00	2	::1	2023-03-06 10:38:39.982856+00	2023-03-06 10:38:39.982856+00
    \.


    --
    -- Data for Name: Users; Type: TABLE DATA; Schema: public; Owner: guest
    --

    COPY public."Users" ("Id", "IdentityId", "Address_Street", "Address_City", "Address_State", "Address_Country", "Address_ZipCode", "Created", "Modified") FROM stdin;
    1	8872d9d7-1b0c-4bf1-904b-473dbb122c0f	\N	\N	\N	\N	\N	2023-03-06 10:37:54.595493+00	2023-03-06 10:38:23.976598+00
    2	44665118-ee61-4797-87b9-228f7f783250	\N	\N	\N	\N	\N	2023-03-06 10:38:10.53502+00	2023-03-06 10:38:39.982857+00
    \.


    --
    -- Data for Name: __EFMigrationsHistory; Type: TABLE DATA; Schema: public; Owner: guest
    --

    COPY public."__EFMigrationsHistory" ("MigrationId", "ProductVersion") FROM stdin;
    20230819082552_Initial	7.0.10
    20230819084946_Initial	7.0.10
    \.


    --
    -- Name: AspNetRoleClaims_Id_seq; Type: SEQUENCE SET; Schema: public; Owner: guest
    --

    SELECT pg_catalog.setval('public."AspNetRoleClaims_Id_seq"', 1, false);


    --
    -- Name: AspNetUserClaims_Id_seq; Type: SEQUENCE SET; Schema: public; Owner: guest
    --

    SELECT pg_catalog.setval('public."AspNetUserClaims_Id_seq"', 2, true);


    --
    -- Name: RefreshTokens_Id_seq; Type: SEQUENCE SET; Schema: public; Owner: guest
    --

    SELECT pg_catalog.setval('public."RefreshTokens_Id_seq"', 2, true);


    --
    -- Name: Users_Id_seq; Type: SEQUENCE SET; Schema: public; Owner: guest
    --

    SELECT pg_catalog.setval('public."Users_Id_seq"', 2, true);


    --
    -- Name: AspNetRoleClaims PK_AspNetRoleClaims; Type: CONSTRAINT; Schema: public; Owner: guest
    --

    ALTER TABLE ONLY public."AspNetRoleClaims"
        ADD CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id");


    --
    -- Name: AspNetRoles PK_AspNetRoles; Type: CONSTRAINT; Schema: public; Owner: guest
    --

    ALTER TABLE ONLY public."AspNetRoles"
        ADD CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id");


    --
    -- Name: AspNetUserClaims PK_AspNetUserClaims; Type: CONSTRAINT; Schema: public; Owner: guest
    --

    ALTER TABLE ONLY public."AspNetUserClaims"
        ADD CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id");


    --
    -- Name: AspNetUserLogins PK_AspNetUserLogins; Type: CONSTRAINT; Schema: public; Owner: guest
    --

    ALTER TABLE ONLY public."AspNetUserLogins"
        ADD CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey");


    --
    -- Name: AspNetUserRoles PK_AspNetUserRoles; Type: CONSTRAINT; Schema: public; Owner: guest
    --

    ALTER TABLE ONLY public."AspNetUserRoles"
        ADD CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId");


    --
    -- Name: AspNetUserTokens PK_AspNetUserTokens; Type: CONSTRAINT; Schema: public; Owner: guest
    --

    ALTER TABLE ONLY public."AspNetUserTokens"
        ADD CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name");


    --
    -- Name: AspNetUsers PK_AspNetUsers; Type: CONSTRAINT; Schema: public; Owner: guest
    --

    ALTER TABLE ONLY public."AspNetUsers"
        ADD CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id");


    --
    -- Name: RefreshTokens PK_RefreshTokens; Type: CONSTRAINT; Schema: public; Owner: guest
    --

    ALTER TABLE ONLY public."RefreshTokens"
        ADD CONSTRAINT "PK_RefreshTokens" PRIMARY KEY ("Id");


    --
    -- Name: Users PK_Users; Type: CONSTRAINT; Schema: public; Owner: guest
    --

    ALTER TABLE ONLY public."Users"
        ADD CONSTRAINT "PK_Users" PRIMARY KEY ("Id");


    --
    -- Name: __EFMigrationsHistory PK___EFMigrationsHistory; Type: CONSTRAINT; Schema: public; Owner: guest
    --

    ALTER TABLE ONLY public."__EFMigrationsHistory"
        ADD CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId");


    --
    -- Name: EmailIndex; Type: INDEX; Schema: public; Owner: guest
    --

    CREATE INDEX "EmailIndex" ON public."AspNetUsers" USING btree ("NormalizedEmail");


    --
    -- Name: IX_AspNetRoleClaims_RoleId; Type: INDEX; Schema: public; Owner: guest
    --

    CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON public."AspNetRoleClaims" USING btree ("RoleId");


    --
    -- Name: IX_AspNetUserClaims_UserId; Type: INDEX; Schema: public; Owner: guest
    --

    CREATE INDEX "IX_AspNetUserClaims_UserId" ON public."AspNetUserClaims" USING btree ("UserId");


    --
    -- Name: IX_AspNetUserLogins_UserId; Type: INDEX; Schema: public; Owner: guest
    --

    CREATE INDEX "IX_AspNetUserLogins_UserId" ON public."AspNetUserLogins" USING btree ("UserId");


    --
    -- Name: IX_AspNetUserRoles_RoleId; Type: INDEX; Schema: public; Owner: guest
    --

    CREATE INDEX "IX_AspNetUserRoles_RoleId" ON public."AspNetUserRoles" USING btree ("RoleId");


    --
    -- Name: IX_RefreshTokens_UserId; Type: INDEX; Schema: public; Owner: guest
    --

    CREATE INDEX "IX_RefreshTokens_UserId" ON public."RefreshTokens" USING btree ("UserId");


    --
    -- Name: RoleNameIndex; Type: INDEX; Schema: public; Owner: guest
    --

    CREATE UNIQUE INDEX "RoleNameIndex" ON public."AspNetRoles" USING btree ("NormalizedName");


    --
    -- Name: UserNameIndex; Type: INDEX; Schema: public; Owner: guest
    --

    CREATE UNIQUE INDEX "UserNameIndex" ON public."AspNetUsers" USING btree ("NormalizedUserName");


    --
    -- Name: AspNetRoleClaims FK_AspNetRoleClaims_AspNetRoles_RoleId; Type: FK CONSTRAINT; Schema: public; Owner: guest
    --

    ALTER TABLE ONLY public."AspNetRoleClaims"
        ADD CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES public."AspNetRoles"("Id") ON DELETE CASCADE;


    --
    -- Name: AspNetUserClaims FK_AspNetUserClaims_AspNetUsers_UserId; Type: FK CONSTRAINT; Schema: public; Owner: guest
    --

    ALTER TABLE ONLY public."AspNetUserClaims"
        ADD CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES public."AspNetUsers"("Id") ON DELETE CASCADE;


    --
    -- Name: AspNetUserLogins FK_AspNetUserLogins_AspNetUsers_UserId; Type: FK CONSTRAINT; Schema: public; Owner: guest
    --

    ALTER TABLE ONLY public."AspNetUserLogins"
        ADD CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES public."AspNetUsers"("Id") ON DELETE CASCADE;


    --
    -- Name: AspNetUserRoles FK_AspNetUserRoles_AspNetRoles_RoleId; Type: FK CONSTRAINT; Schema: public; Owner: guest
    --

    ALTER TABLE ONLY public."AspNetUserRoles"
        ADD CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES public."AspNetRoles"("Id") ON DELETE CASCADE;


    --
    -- Name: AspNetUserRoles FK_AspNetUserRoles_AspNetUsers_UserId; Type: FK CONSTRAINT; Schema: public; Owner: guest
    --

    ALTER TABLE ONLY public."AspNetUserRoles"
        ADD CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES public."AspNetUsers"("Id") ON DELETE CASCADE;


    --
    -- Name: AspNetUserTokens FK_AspNetUserTokens_AspNetUsers_UserId; Type: FK CONSTRAINT; Schema: public; Owner: guest
    --

    ALTER TABLE ONLY public."AspNetUserTokens"
        ADD CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES public."AspNetUsers"("Id") ON DELETE CASCADE;


    --
    -- Name: RefreshTokens FK_RefreshTokens_Users_UserId; Type: FK CONSTRAINT; Schema: public; Owner: guest
    --

    ALTER TABLE ONLY public."RefreshTokens"
        ADD CONSTRAINT "FK_RefreshTokens_Users_UserId" FOREIGN KEY ("UserId") REFERENCES public."Users"("Id") ON DELETE CASCADE;


    --
    -- Name: SCHEMA public; Type: ACL; Schema: -; Owner: postgres
    --

    REVOKE USAGE ON SCHEMA public FROM PUBLIC;
    GRANT ALL ON SCHEMA public TO PUBLIC;
    GRANT ALL ON SCHEMA public TO guest;

    --
    -- PostgreSQL database dump complete
    --
  library.sql: |+
    --
    -- PostgreSQL database dump
    --

    -- Dumped from database version 17.4 (Debian 17.4-1.pgdg120+2)
    -- Dumped by pg_dump version 17.0 (Ubuntu 17.0-1.pgdg24.04+1)

    SET statement_timeout = 0;
    SET lock_timeout = 0;
    SET idle_in_transaction_session_timeout = 0;
    SET transaction_timeout = 0;
    SET client_encoding = 'UTF8';
    SET standard_conforming_strings = on;
    SELECT pg_catalog.set_config('search_path', '', false);
    SET check_function_bodies = false;
    SET xmloption = content;
    SET client_min_messages = warning;
    SET row_security = off;

    SET default_tablespace = '';

    SET default_table_access_method = heap;

    --
    -- Name: alembic_version; Type: TABLE; Schema: public; Owner: guest
    --

    CREATE TABLE public.alembic_version (
        version_num character varying(32) NOT NULL
    );


    ALTER TABLE public.alembic_version OWNER TO guest;

    --
    -- Name: authors; Type: TABLE; Schema: public; Owner: guest
    --

    CREATE TABLE public.authors (
        id integer NOT NULL,
        firstname character varying(128) NOT NULL,
        lastname character varying(128) NOT NULL,
        email character varying(255) NOT NULL,
        phone character varying(15),
        created_at timestamp with time zone NOT NULL,
        modified_at timestamp with time zone NOT NULL
    );


    ALTER TABLE public.authors OWNER TO guest;

    --
    -- Name: authors_id_seq; Type: SEQUENCE; Schema: public; Owner: guest
    --

    ALTER TABLE public.authors ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.authors_id_seq
        START WITH 1
        INCREMENT BY 1
        NO MINVALUE
        NO MAXVALUE
        CACHE 1
    );


    --
    -- Name: books; Type: TABLE; Schema: public; Owner: guest
    --

    CREATE TABLE public.books (
        id integer NOT NULL,
        title character varying(128) NOT NULL,
        isbn character varying(255) NOT NULL,
        page_count integer NOT NULL,
        created_at timestamp with time zone NOT NULL,
        modified_at timestamp with time zone NOT NULL,
        author_id integer NOT NULL
    );


    ALTER TABLE public.books OWNER TO guest;

    --
    -- Name: books_id_seq; Type: SEQUENCE; Schema: public; Owner: guest
    --

    ALTER TABLE public.books ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.books_id_seq
        START WITH 1
        INCREMENT BY 1
        NO MINVALUE
        NO MAXVALUE
        CACHE 1
    );


    --
    -- Name: users; Type: TABLE; Schema: public; Owner: guest
    --

    CREATE TABLE public.users (
        id integer NOT NULL,
        firstname character varying(128) NOT NULL,
        lastname character varying(128) NOT NULL,
        email character varying(255) NOT NULL,
        phone character varying(15),
        password character varying(128),
        lastlogin timestamp with time zone,
        created_at timestamp with time zone NOT NULL,
        modified_at timestamp with time zone NOT NULL
    );


    ALTER TABLE public.users OWNER TO guest;

    --
    -- Name: users_id_seq; Type: SEQUENCE; Schema: public; Owner: guest
    --

    ALTER TABLE public.users ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.users_id_seq
        START WITH 1
        INCREMENT BY 1
        NO MINVALUE
        NO MAXVALUE
        CACHE 1
    );


    --
    -- Data for Name: alembic_version; Type: TABLE DATA; Schema: public; Owner: guest
    --

    COPY public.alembic_version (version_num) FROM stdin;
    8813faeb5825
    \.


    --
    -- Data for Name: authors; Type: TABLE DATA; Schema: public; Owner: guest
    --

    COPY public.authors (id, firstname, lastname, email, phone, created_at, modified_at) FROM stdin;
    \.


    --
    -- Data for Name: books; Type: TABLE DATA; Schema: public; Owner: guest
    --

    COPY public.books (id, title, isbn, page_count, created_at, modified_at, author_id) FROM stdin;
    \.


    --
    -- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: guest
    --

    COPY public.users (id, firstname, lastname, email, phone, password, lastlogin, created_at, modified_at) FROM stdin;
    \.


    --
    -- Name: authors_id_seq; Type: SEQUENCE SET; Schema: public; Owner: guest
    --

    SELECT pg_catalog.setval('public.authors_id_seq', 1, false);


    --
    -- Name: books_id_seq; Type: SEQUENCE SET; Schema: public; Owner: guest
    --

    SELECT pg_catalog.setval('public.books_id_seq', 1, false);


    --
    -- Name: users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: guest
    --

    SELECT pg_catalog.setval('public.users_id_seq', 1, false);


    --
    -- Name: alembic_version alembic_version_pkc; Type: CONSTRAINT; Schema: public; Owner: guest
    --

    ALTER TABLE ONLY public.alembic_version
        ADD CONSTRAINT alembic_version_pkc PRIMARY KEY (version_num);


    --
    -- Name: authors authors_pkey; Type: CONSTRAINT; Schema: public; Owner: guest
    --

    ALTER TABLE ONLY public.authors
        ADD CONSTRAINT authors_pkey PRIMARY KEY (id);


    --
    -- Name: books books_pkey; Type: CONSTRAINT; Schema: public; Owner: guest
    --

    ALTER TABLE ONLY public.books
        ADD CONSTRAINT books_pkey PRIMARY KEY (id);


    --
    -- Name: users users_pkey; Type: CONSTRAINT; Schema: public; Owner: guest
    --

    ALTER TABLE ONLY public.users
        ADD CONSTRAINT users_pkey PRIMARY KEY (id);


    --
    -- Name: ix_authors_email; Type: INDEX; Schema: public; Owner: guest
    --

    CREATE UNIQUE INDEX ix_authors_email ON public.authors USING btree (email);


    --
    -- Name: ix_authors_phone; Type: INDEX; Schema: public; Owner: guest
    --

    CREATE UNIQUE INDEX ix_authors_phone ON public.authors USING btree (phone);


    --
    -- Name: ix_users_email; Type: INDEX; Schema: public; Owner: guest
    --

    CREATE UNIQUE INDEX ix_users_email ON public.users USING btree (email);

    --
    -- Name: ix_users_phone; Type: INDEX; Schema: public; Owner: guest
    --

    CREATE UNIQUE INDEX ix_users_phone ON public.users USING btree (phone);

    --
    -- Name: books books_author_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: guest
    --

    ALTER TABLE ONLY public.books
        ADD CONSTRAINT books_author_id_fkey FOREIGN KEY (author_id) REFERENCES public.authors(id);
    --
    -- PostgreSQL database dump complete
    --
  school.sql: |+
    --
    -- PostgreSQL database dump
    --

    -- Dumped from database version 14.5 (Debian 14.5-1.pgdg110+1)
    -- Dumped by pg_dump version 14.5 (Debian 14.5-1.pgdg110+1)

    SET statement_timeout = 0;
    SET lock_timeout = 0;
    SET idle_in_transaction_session_timeout = 0;
    SET client_encoding = 'UTF8';
    SET standard_conforming_strings = on;
    SELECT pg_catalog.set_config('search_path', '', false);
    SET check_function_bodies = false;
    SET xmloption = content;
    SET client_min_messages = warning;
    SET row_security = off;

    SET default_tablespace = '';

    SET default_table_access_method = heap;

    --
    -- Name: student; Type: TABLE; Schema: public; Owner: guest
    --

    CREATE TABLE public.student (
        id integer NOT NULL,
        created timestamp without time zone NOT NULL,
        modified timestamp without time zone NOT NULL,
        "firstName" character varying(256) NOT NULL,
        "lastName" character varying(256) NOT NULL,
        email character varying(256) NOT NULL,
        "isSuspended" boolean NOT NULL
    );


    ALTER TABLE public.student OWNER TO guest;

    --
    -- Name: student_id_seq; Type: SEQUENCE; Schema: public; Owner: guest
    --

    CREATE SEQUENCE public.student_id_seq
        AS integer
        START WITH 1
        INCREMENT BY 1
        NO MINVALUE
        NO MAXVALUE
        CACHE 1;


    ALTER TABLE public.student_id_seq OWNER TO guest;

    --
    -- Name: student_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: guest
    --

    ALTER SEQUENCE public.student_id_seq OWNED BY public.student.id;


    --
    -- Name: student_teachers_teacher; Type: TABLE; Schema: public; Owner: guest
    --

    CREATE TABLE public.student_teachers_teacher (
        "studentId" integer NOT NULL,
        "teacherId" integer NOT NULL
    );


    ALTER TABLE public.student_teachers_teacher OWNER TO guest;

    --
    -- Name: teacher; Type: TABLE; Schema: public; Owner: guest
    --

    CREATE TABLE public.teacher (
        id integer NOT NULL,
        created timestamp without time zone NOT NULL,
        modified timestamp without time zone NOT NULL,
        "firstName" character varying(256) NOT NULL,
        "lastName" character varying(256) NOT NULL,
        email character varying(256) NOT NULL
    );


    ALTER TABLE public.teacher OWNER TO guest;

    --
    -- Name: teacher_id_seq; Type: SEQUENCE; Schema: public; Owner: guest
    --

    CREATE SEQUENCE public.teacher_id_seq
        AS integer
        START WITH 1
        INCREMENT BY 1
        NO MINVALUE
        NO MAXVALUE
        CACHE 1;


    ALTER TABLE public.teacher_id_seq OWNER TO guest;

    --
    -- Name: teacher_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: guest
    --

    ALTER SEQUENCE public.teacher_id_seq OWNED BY public.teacher.id;


    --
    -- Name: student id; Type: DEFAULT; Schema: public; Owner: guest
    --

    ALTER TABLE ONLY public.student ALTER COLUMN id SET DEFAULT nextval('public.student_id_seq'::regclass);


    --
    -- Name: teacher id; Type: DEFAULT; Schema: public; Owner: guest
    --

    ALTER TABLE ONLY public.teacher ALTER COLUMN id SET DEFAULT nextval('public.teacher_id_seq'::regclass);


    --
    -- Data for Name: student; Type: TABLE DATA; Schema: public; Owner: guest
    --

    COPY public.student (id, created, modified, "firstName", "lastName", email, "isSuspended") FROM stdin;
    \.


    --
    -- Data for Name: student_teachers_teacher; Type: TABLE DATA; Schema: public; Owner: guest
    --

    COPY public.student_teachers_teacher ("studentId", "teacherId") FROM stdin;
    \.


    --
    -- Data for Name: teacher; Type: TABLE DATA; Schema: public; Owner: guest
    --

    COPY public.teacher (id, created, modified, "firstName", "lastName", email) FROM stdin;
    \.

    --
    -- Name: student_id_seq; Type: SEQUENCE SET; Schema: public; Owner: guest
    --

    SELECT pg_catalog.setval('public.student_id_seq', 1, false);


    --
    -- Name: teacher_id_seq; Type: SEQUENCE SET; Schema: public; Owner: guest
    --

    SELECT pg_catalog.setval('public.teacher_id_seq', 1, false);


    --
    -- Name: teacher PK_2f807294148612a9751dacf1026; Type: CONSTRAINT; Schema: public; Owner: guest
    --

    ALTER TABLE ONLY public.teacher
        ADD CONSTRAINT "PK_2f807294148612a9751dacf1026" PRIMARY KEY (id);


    --
    -- Name: student PK_3d8016e1cb58429474a3c041904; Type: CONSTRAINT; Schema: public; Owner: guest
    --

    ALTER TABLE ONLY public.student
        ADD CONSTRAINT "PK_3d8016e1cb58429474a3c041904" PRIMARY KEY (id);


    --
    -- Name: student_teachers_teacher PK_ec87c1e05d0d8cefa233575cfe1; Type: CONSTRAINT; Schema: public; Owner: guest
    --

    ALTER TABLE ONLY public.student_teachers_teacher
        ADD CONSTRAINT "PK_ec87c1e05d0d8cefa233575cfe1" PRIMARY KEY ("studentId", "teacherId");


    --
    -- Name: teacher UQ_00634394dce7677d531749ed8e8; Type: CONSTRAINT; Schema: public; Owner: guest
    --

    ALTER TABLE ONLY public.teacher
        ADD CONSTRAINT "UQ_00634394dce7677d531749ed8e8" UNIQUE (email);


    --
    -- Name: student UQ_a56c051c91dbe1068ad683f536e; Type: CONSTRAINT; Schema: public; Owner: guest
    --

    ALTER TABLE ONLY public.student
        ADD CONSTRAINT "UQ_a56c051c91dbe1068ad683f536e" UNIQUE (email);


    --
    -- Name: IDX_b0ef0f5f4afbbdcd6984f41465; Type: INDEX; Schema: public; Owner: guest
    --

    CREATE INDEX "IDX_b0ef0f5f4afbbdcd6984f41465" ON public.student_teachers_teacher USING btree ("studentId");


    --
    -- Name: IDX_bbce22585af3071bbe4f355a12; Type: INDEX; Schema: public; Owner: guest
    --

    CREATE INDEX "IDX_bbce22585af3071bbe4f355a12" ON public.student_teachers_teacher USING btree ("teacherId");


    --
    -- Name: student_teachers_teacher FK_b0ef0f5f4afbbdcd6984f414650; Type: FK CONSTRAINT; Schema: public; Owner: guest
    --

    ALTER TABLE ONLY public.student_teachers_teacher
        ADD CONSTRAINT "FK_b0ef0f5f4afbbdcd6984f414650" FOREIGN KEY ("studentId") REFERENCES public.student(id) ON UPDATE CASCADE ON DELETE CASCADE;


    --
    -- Name: student_teachers_teacher FK_bbce22585af3071bbe4f355a12b; Type: FK CONSTRAINT; Schema: public; Owner: guest
    --

    ALTER TABLE ONLY public.student_teachers_teacher
    ADD CONSTRAINT "FK_bbce22585af3071bbe4f355a12b" FOREIGN KEY ("teacherId") REFERENCES public.teacher(id);
  Langchain.sql: |+
    --
    -- PostgreSQL database dump
    --

    -- Dumped from database version 17.4 (Debian 17.4-1.pgdg120+2)
    -- Dumped by pg_dump version 17.4 (Ubuntu 17.4-1)

    SET statement_timeout = 0;
    SET lock_timeout = 0;
    SET idle_in_transaction_session_timeout = 0;
    SET transaction_timeout = 0;
    SET client_encoding = 'UTF8';
    SET standard_conforming_strings = on;
    SELECT pg_catalog.set_config('search_path', '', false);
    SET check_function_bodies = false;
    SET xmloption = content;
    SET client_min_messages = warning;
    SET row_security = off;

    --
    -- Name: vector; Type: EXTENSION; Schema: -; Owner: -
    --

    CREATE EXTENSION IF NOT EXISTS vector WITH SCHEMA public;


    --
    -- Name: EXTENSION vector; Type: COMMENT; Schema: -; Owner: 
    --

    COMMENT ON EXTENSION vector IS 'vector data type and ivfflat and hnsw access methods';


    SET default_tablespace = '';

    SET default_table_access_method = heap;

    --
    -- Name: checkpoint_blobs; Type: TABLE; Schema: public; Owner: guest
    --

    CREATE TABLE public.checkpoint_blobs (
        thread_id text NOT NULL,
        checkpoint_ns text DEFAULT ''::text NOT NULL,
        channel text NOT NULL,
        version text NOT NULL,
        type text NOT NULL,
        blob bytea
    );


    ALTER TABLE public.checkpoint_blobs OWNER TO guest;

    --
    -- Name: checkpoint_migrations; Type: TABLE; Schema: public; Owner: guest
    --

    CREATE TABLE public.checkpoint_migrations (
        v integer NOT NULL
    );


    ALTER TABLE public.checkpoint_migrations OWNER TO guest;

    --
    -- Name: checkpoint_writes; Type: TABLE; Schema: public; Owner: guest
    --

    CREATE TABLE public.checkpoint_writes (
        thread_id text NOT NULL,
        checkpoint_ns text DEFAULT ''::text NOT NULL,
        checkpoint_id text NOT NULL,
        task_id text NOT NULL,
        idx integer NOT NULL,
        channel text NOT NULL,
        type text,
        blob bytea NOT NULL,
        task_path text DEFAULT ''::text NOT NULL
    );


    ALTER TABLE public.checkpoint_writes OWNER TO guest;

    --
    -- Name: checkpoints; Type: TABLE; Schema: public; Owner: guest
    --

    CREATE TABLE public.checkpoints (
        thread_id text NOT NULL,
        checkpoint_ns text DEFAULT ''::text NOT NULL,
        checkpoint_id text NOT NULL,
        parent_checkpoint_id text,
        type text,
        checkpoint jsonb NOT NULL,
        metadata jsonb DEFAULT '{}'::jsonb NOT NULL
    );


    ALTER TABLE public.checkpoints OWNER TO guest;

    --
    -- Name: langchain_pg_collection; Type: TABLE; Schema: public; Owner: postgres
    --

    CREATE TABLE public.langchain_pg_collection (
        uuid uuid NOT NULL,
        name character varying NOT NULL,
        cmetadata json
    );


    ALTER TABLE public.langchain_pg_collection OWNER TO postgres;

    --
    -- Name: langchain_pg_embedding; Type: TABLE; Schema: public; Owner: postgres
    --

    CREATE TABLE public.langchain_pg_embedding (
        id character varying NOT NULL,
        collection_id uuid,
        embedding public.vector,
        document character varying,
        cmetadata jsonb
    );


    ALTER TABLE public.langchain_pg_embedding OWNER TO postgres;

    --
    -- Data for Name: checkpoint_blobs; Type: TABLE DATA; Schema: public; Owner: guest
    --

    COPY public.checkpoint_blobs (thread_id, checkpoint_ns, channel, version, type, blob) FROM stdin;
    \.


    --
    -- Data for Name: checkpoint_migrations; Type: TABLE DATA; Schema: public; Owner: guest
    --

    COPY public.checkpoint_migrations (v) FROM stdin;
    0
    1
    2
    3
    4
    5
    6
    7
    8
    9
    \.


    --
    -- Data for Name: checkpoint_writes; Type: TABLE DATA; Schema: public; Owner: guest
    --

    COPY public.checkpoint_writes (thread_id, checkpoint_ns, checkpoint_id, task_id, idx, channel, type, blob, task_path) FROM stdin;
    \.


    --
    -- Data for Name: checkpoints; Type: TABLE DATA; Schema: public; Owner: guest
    --

    COPY public.checkpoints (thread_id, checkpoint_ns, checkpoint_id, parent_checkpoint_id, type, checkpoint, metadata) FROM stdin;
    \.


    --
    -- Data for Name: langchain_pg_collection; Type: TABLE DATA; Schema: public; Owner: postgres
    --

    COPY public.langchain_pg_collection (uuid, name, cmetadata) FROM stdin;
    1fe2df5b-e6cc-4aa6-aff9-90e47ff9d962	LLM-RAG-Agent	null
    \.


    --
    -- Data for Name: langchain_pg_embedding; Type: TABLE DATA; Schema: public; Owner: postgres
    --

    COPY public.langchain_pg_embedding (id, collection_id, embedding, document, cmetadata) FROM stdin;
    \.


    --
    -- Name: checkpoint_blobs checkpoint_blobs_pkey; Type: CONSTRAINT; Schema: public; Owner: guest
    --

    ALTER TABLE ONLY public.checkpoint_blobs
        ADD CONSTRAINT checkpoint_blobs_pkey PRIMARY KEY (thread_id, checkpoint_ns, channel, version);


    --
    -- Name: checkpoint_migrations checkpoint_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: guest
    --

    ALTER TABLE ONLY public.checkpoint_migrations
        ADD CONSTRAINT checkpoint_migrations_pkey PRIMARY KEY (v);


    --
    -- Name: checkpoint_writes checkpoint_writes_pkey; Type: CONSTRAINT; Schema: public; Owner: guest
    --

    ALTER TABLE ONLY public.checkpoint_writes
        ADD CONSTRAINT checkpoint_writes_pkey PRIMARY KEY (thread_id, checkpoint_ns, checkpoint_id, task_id, idx);


    --
    -- Name: checkpoints checkpoints_pkey; Type: CONSTRAINT; Schema: public; Owner: guest
    --

    ALTER TABLE ONLY public.checkpoints
        ADD CONSTRAINT checkpoints_pkey PRIMARY KEY (thread_id, checkpoint_ns, checkpoint_id);


    --
    -- Name: langchain_pg_collection langchain_pg_collection_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
    --

    ALTER TABLE ONLY public.langchain_pg_collection
        ADD CONSTRAINT langchain_pg_collection_name_key UNIQUE (name);


    --
    -- Name: langchain_pg_collection langchain_pg_collection_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
    --

    ALTER TABLE ONLY public.langchain_pg_collection
        ADD CONSTRAINT langchain_pg_collection_pkey PRIMARY KEY (uuid);


    --
    -- Name: langchain_pg_embedding langchain_pg_embedding_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
    --

    ALTER TABLE ONLY public.langchain_pg_embedding
        ADD CONSTRAINT langchain_pg_embedding_pkey PRIMARY KEY (id);


    --
    -- Name: checkpoint_blobs_thread_id_idx; Type: INDEX; Schema: public; Owner: guest
    --

    CREATE INDEX checkpoint_blobs_thread_id_idx ON public.checkpoint_blobs USING btree (thread_id);


    --
    -- Name: checkpoint_writes_thread_id_idx; Type: INDEX; Schema: public; Owner: guest
    --

    CREATE INDEX checkpoint_writes_thread_id_idx ON public.checkpoint_writes USING btree (thread_id);


    --
    -- Name: checkpoints_thread_id_idx; Type: INDEX; Schema: public; Owner: guest
    --

    CREATE INDEX checkpoints_thread_id_idx ON public.checkpoints USING btree (thread_id);


    --
    -- Name: ix_cmetadata_gin; Type: INDEX; Schema: public; Owner: postgres
    --

    CREATE INDEX ix_cmetadata_gin ON public.langchain_pg_embedding USING gin (cmetadata jsonb_path_ops);


    --
    -- Name: ix_langchain_pg_embedding_id; Type: INDEX; Schema: public; Owner: postgres
    --

    CREATE UNIQUE INDEX ix_langchain_pg_embedding_id ON public.langchain_pg_embedding USING btree (id);


    --
    -- Name: langchain_pg_embedding langchain_pg_embedding_collection_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
    --

    ALTER TABLE ONLY public.langchain_pg_embedding
        ADD CONSTRAINT langchain_pg_embedding_collection_id_fkey FOREIGN KEY (collection_id) REFERENCES public.langchain_pg_collection(uuid) ON DELETE CASCADE;


    --
    -- PostgreSQL database dump complete
    --


