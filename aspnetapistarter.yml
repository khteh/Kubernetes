apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: aspnetapistarter
  labels:
    app: aspnetapistarter
spec:
  serviceName: svc-aspnetapistarter
  podManagementPolicy: Parallel # Default is OrderedReady
  replicas: 2 # Default is 1
  updateStrategy: 
    type: RollingUpdate
  selector:
    matchLabels:
      app: aspnetapistarter # Has to match .spec.template.metadata.labels
  template:
    metadata:
      labels:
        app: aspnetapistarter # Has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
#      affinity:
#        podAntiAffinity:
#          requiredDuringSchedulingIgnoredDuringExecution:
#          - labelSelector:
#              matchExpressions:
#              - key: app
#                operator: In
#                values:
#                - aspnetapistarter
#            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: aspnetapistarter
        image: khteh/asp.netcoreapistarter:latest
        imagePullPolicy: Always
        env:
          - name: ASPNETCORE_ENVIRONMENT
            value: Production
          - name: ASPNETCORE_URLS
            value: "https://+;http://+"
          - name: ASPNETCORE_HTTPS_PORT
            value: "5000"
          - name: COMPlus_ThreadPool_ForceMinWorkerThreads
            value: "1000"
          - name: COMPlus_ThreadPool_ForceMaxWorkerThreads
            value: "10000" 
        ports:
        - containerPort: 5000
          name: http
          protocol: TCP
#          hostPort: 8081
        - containerPort: 443
          name: https
          protocol: TCP
#          hostPort: 8082
        readinessProbe:
          httpGet:
            path: /health/ready
            port: http
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 5
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        livenessProbe:
          httpGet:
            path: /health/live
            port: http
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 3
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        volumeMounts:
        - name: mysql-connection
          mountPath: /app/appsettings.mysql.json
          subPath: appsettings.mysql.json
          readOnly: true
        - name: log
          mountPath: /var/log/aspnetcore
        resources:
          limits:
            cpu: 250m
            memory: 1024Mi
      - name: fluentd
        image: khteh/fluentd:latest
        env:
        - name: FLUENTD_ARGS
          value: -c /etc/td-agent/td-agent.conf
        volumeMounts:
        - name: log
          mountPath: /var/log/aspnetcore
        - name: fluentd-config
          mountPath: /etc/td-agent
        - name: access-log-template
          mountPath: /tmp/access_log_template.json
          subPath: access_log_template.json
          readOnly: true
        resources:
          limits:
            cpu: 250m
            memory: 1024Mi
      volumes:
      - name: mysql-connection
        secret:
          secretName: aspnetapistarter
          items:
          - key: aspnetapistarter.mysql.json
            path: appsettings.mysql.json
      - name: fluentd-config
        configMap:
          name: fluentd-config
      - name: access-log-template
        configMap:
          name: access-log-template
      - name: log
        emptyDir: {}
