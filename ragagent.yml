apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ragagent
  labels:
    app: ragagent
    component: llm-rag
spec:
  serviceName: svc-ragagent
  podManagementPolicy: Parallel # Default is OrderedReady
  replicas: 2 # Default is 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: ragagent # Has to match .spec.template.metadata.labels
      component: llm-rag
  template:
    metadata:
      labels:
        app: ragagent # Has to match .spec.selector.matchLabels
        component: llm-rag
    spec:
      terminationGracePeriodSeconds: 10
      #      affinity:
      #        podAntiAffinity:
      #          requiredDuringSchedulingIgnoredDuringExecution:
      #          - labelSelector:
      #              matchExpressions:
      #              - key: app
      #                operator: In
      #                values:
      #                - ragagent
      #            topologyKey: "kubernetes.io/hostname"
      containers:
        - name: ragagent
          image: khteh/ragagent:latest
          imagePullPolicy: Always
          env:
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: postgresql-secret
                  key: postgresql-user
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql-secret
                  key: postgresql-password
          ports:
            - containerPort: 8080
              name: http2
              protocol: TCP
            #          hostPort: 8081
            - containerPort: 4433
              name: http3
              protocol: UDP
          #          hostPort: 8082
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: http2
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 10
            failureThreshold: 3
            successThreshold: 1
          livenessProbe:
            httpGet:
              path: /healthz/live
              port: http2
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 10
            failureThreshold: 3
            successThreshold: 1
          volumeMounts:
            - name: rag-agent-secret
              mountPath: /app/.env
              subPath: .env
              readOnly: true
            - name: ragagent-config
              mountPath: /etc/ragagent_config.json
              subPath: ragagent_config.json
              readOnly: true
            - name: hypercorn-config
              mountPath: /etc/hypercorn.toml
              subPath: hypercorn.toml
              readOnly: true
          #        - name: log
          #          mountPath: /var/log/aspnetcore
          resources:
            limits:
              cpu: 500m
              memory: 2Gi
        - name: fluentd
          image: khteh/fluentd:latest
          volumeMounts:
            - name: log
              mountPath: /var/log/ragagent
            - name: hypercornlog
              mountPath: /var/log/hypercorn
            - name: ragagent-fluentd-config
              mountPath: /etc/td-agent
            - name: access-log-template
              mountPath: /tmp/access_log_template.json
              subPath: access_log_template.json
              readOnly: true
            #- mountPath: /fluentd/elastic/tls.crt
            #  name: elasticsearch-ca
            #  subPath: tls.crt
            #  readOnly: true
          resources:
            limits:
              cpu: 500m
              memory: 2Gi
      volumes:
        - name: rag-agent-secret
          secret:
            secretName: rag-agent-secret
            items:
              - key: .env
                path: .env
        - name: hypercorn-config
          configMap:
            name: hypercorn-config
        - name: ragagent-config
          configMap:
            name: ragagent
        - name: ragagent-fluentd-config
          configMap:
            name: ragagent-fluentd-config
        - name: access-log-template
          configMap:
            name: access-log-template
        - name: log
          emptyDir: {}
        - name: hypercornlog
          emptyDir: {}
        #- name: elasticsearch-ca
        #  secret:
        #    defaultMode: 420
        #    optional: false
        #    secretName: elasticsearch-eck-ca
