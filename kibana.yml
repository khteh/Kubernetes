apiVersion: v1
kind: Service
metadata:
  name: svc-kibana
  annotations:
    alb.ingress.kubernetes.io/healthcheck-path: /login
    alb.ingress.kubernetes.io/backend-protocol: HTTPS
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTPS
    alb.ingress.kubernetes.io/backend-protocol-version: HTTP2
  labels:
    app: kibana
spec:
  selector:
    app: kibana
  #    tier: database
  ports:
    - name: kibana
      protocol: TCP
      port: 443
      targetPort: 5601
  clusterIP: None # Headless
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kibana
spec:
  serviceName: "svc-kibana"
  podManagementPolicy: Parallel # Default is OrderedReady
  replicas: 2 # Default is 1
  selector:
    matchLabels:
      app: kibana # Has to match .spec.template.metadata.labels
  template:
    metadata:
      labels:
        app: kibana # Has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - kibana
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: kibana
          securityContext:
            capabilities:
              add:
                - IPC_LOCK
                - SYS_RESOURCE
          image: kibana:8.6.1
          imagePullPolicy: Always
          command: ["/usr/share/kibana/bin/kibana"]
          args: ["-c", "/etc/kibana/kibana.yml"]
          env:
            - name: ELASTICSEARCH_USERNAME
              valueFrom:
                secretKeyRef:
                  name: elasticsearch
                  key: username
            - name: ELASTICSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: elasticsearch
                  key: password
          readinessProbe:
            httpGet:
              scheme: HTTPS
              path: /
              port: 5601
            initialDelaySeconds: 20
            periodSeconds: 5
            timeoutSeconds: 10
            failureThreshold: 3
            successThreshold: 1
          livenessProbe:
            httpGet:
              scheme: HTTPS
              path: /
              port: 5601
            initialDelaySeconds: 20
            periodSeconds: 3
            timeoutSeconds: 10
            failureThreshold: 3
            successThreshold: 1
          ports:
            - containerPort: 5601
              name: kibana
              protocol: TCP
          volumeMounts:
            - name: kibana-config
              mountPath: /etc/kibana
              readOnly: true
          resources:
            requests:
              cpu: 250m
            limits:
              cpu: 500m
              memory: 1024Mi
      volumes:
        - name: kibana-config
          configMap:
            name: kibana-config
